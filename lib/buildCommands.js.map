{"version":3,"sources":["../src/buildCommands.js"],"names":["buildProject","type","name","author","getPackage","opts","sh","which","git","console","log","exec","data","stdout","stderr","editPackageJson","version","path","rawData","fs","readFileSync","JSON","parse","newData","writeFile","stringify","err"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGe,SAASA,YAAT,CAAsB;AAAEC,MAAF;AAAQC,MAAR;AAAcC;AAAd,CAAtB,EAA+C;AAC5D,SAAOC,WAAW;AAAEH,QAAF;AAAQC,QAAR;AAAcC;AAAd,GAAX,CAAP;AACD;;AAED,eAAeC,UAAf,CAA0BC,OAAO,EAAjC,EAAqC;AACnC,MAAI,CAACC,iBAAGC,KAAH,CAASC,GAAT,CAAL,EAAoB;AAClBC,YAAQC,GAAR,CAAY,iCAAZ;AACD;;AACD,MAAIL,KAAKJ,IAAL,KAAc,cAAlB,EAAkC;AAChCK,qBAAGK,IAAH,CAAQ,8DAAR,EAAwE,CAACC,IAAD,EAAOC,MAAP,EAAeC,MAAf,KAA0B;AAChGL,cAAQC,GAAR,CAAYE,IAAZ;AACAH,cAAQC,GAAR,CAAYG,MAAZ;AACAJ,cAAQC,GAAR,CAAYI,MAAZ;AACD,KAJD;AAKD;;AACD,SAAOL,QAAQC,GAAR,CAAY,KAAZ,CAAP;AACD;;AAGD,SAASK,eAAT,CAAyBb,IAAzB,EAA+BC,MAA/B,EAAuCa,UAAU,OAAjD,EAA0DC,OAAO,gBAAjE,EAAmF;AACjF,QAAMC,UAAUC,YAAGC,YAAH,CAAgBC,KAAKC,KAAL,CAAWL,IAAX,CAAhB,CAAhB;;AACA,QAAMM,UAAU,EAAE,GAAGL,OAAL;AAAchB,QAAd;AAAoBC,UAApB;AAA4Ba;AAA5B,GAAhB;;AAEAG,cAAGK,SAAH,CAAaP,IAAb,EAAmBI,KAAKI,SAAL,CAAeF,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAAnB,EAAsDG,GAAD,IAAS;AAC5D,QAAIA,GAAJ,EAAS;AACPjB,cAAQC,GAAR,CAAY,iBAAZ;AACD;;AACDD,YAAQC,GAAR,CAAa,mBAAkBO,IAAK,EAApC;AACD,GALD;;AAMA,SAAO,IAAP;AACD","sourcesContent":["import sh from 'shelljs';\nimport fs from 'fs';\n// import fs from 'fs';\n\n// async function editPackageJson(package) {\n\n// }\n\n// async function getPackage(opts = {}) {\n//   if (opts.type === 'node.express') {\n//     await sh.exec('git clone https://github.com/maxwellsmart84/nodeApiPlate.git');\n//   }\n//   return console.log('WIP');\n// }\n\n\nexport default function buildProject({ type, name, author, }) {\n  return getPackage({ type, name, author, });\n}\n\nasync function getPackage(opts = {}) {\n  if (!sh.which(git)) {\n    console.log('Sorry this program requires git');\n  }\n  if (opts.type === 'node.express') {\n    sh.exec('git clone https://github.com/maxwellsmart84/nodeApiPlate.git', (data, stdout, stderr) => {\n      console.log(data);\n      console.log(stdout);\n      console.log(stderr);\n    });\n  }\n  return console.log('WIP');\n}\n\n\nfunction editPackageJson(name, author, version = '1.0.0', path = './package.json') {\n  const rawData = fs.readFileSync(JSON.parse(path));\n  const newData = { ...rawData, name, author, version, };\n\n  fs.writeFile(path, JSON.stringify(newData, null, 2), (err) => {\n    if (err) {\n      console.log('cant write file');\n    }\n    console.log(`writing to file:${path}`);\n  });\n  return null;\n}\n\n"],"file":"buildCommands.js"}