{"version":3,"sources":["../../src/buildCommands/sqlCommands.js"],"names":["promptSqlInformation","sqlEngineQuestion","type","name","choices","value","message","chalk","blue","sqlEngine","inquirer","prompt","dbName","promptSqlite","dbHost","promptDBConnectionInformation","questions","green","default","answers","question","orange"],"mappings":";;;;;;;;AAAA;;AACA;;;;AAEO,eAAeA,oBAAf,GAAsC;AAC3C,QAAMC,iBAAiB,GAAG,CACxB;AACEC,IAAAA,IAAI,EAAE,MADR;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,OAAO,EAAE,CACP;AACED,MAAAA,IAAI,EAAE,YADR;AAEEE,MAAAA,KAAK,EAAE;AAFT,KADO,EAKP;AACEF,MAAAA,IAAI,EAAE,OADR;AAEEE,MAAAA,KAAK,EAAE;AAFT,KALO,EASP;AACEF,MAAAA,IAAI,EAAE,QADR;AAEEE,MAAAA,KAAK,EAAE;AAFT,KATO,EAaP;AACEF,MAAAA,IAAI,EAAE,UADR;AAEEE,MAAAA,KAAK,EAAE;AAFT,KAbO,EAiBP;AACEF,MAAAA,IAAI,EAAE,OADR;AAEEE,MAAAA,KAAK,EAAE;AAFT,KAjBO,EAqBP;AACEF,MAAAA,IAAI,EAAE,SADR;AAEEE,MAAAA,KAAK,EAAE;AAFT,KArBO,EAyBP;AACEF,MAAAA,IAAI,EAAE,QADR;AAEEE,MAAAA,KAAK,EAAE;AAFT,KAzBO,CAHX;AAiCEC,IAAAA,OAAO,EAAEC,eAAMC,IAAN,CAAW,4BAAX;AAjCX,GADwB,CAA1B;AAqCA,QAAM;AAAEC,IAAAA;AAAF,MAAgB,MAAMC,kBAASC,MAAT,CAAgBV,iBAAhB,CAA5B;;AACA,MAAIQ,SAAS,KAAK,SAAlB,EAA6B;AAC3B,UAAM;AAAEG,MAAAA;AAAF,QAAa,MAAMC,YAAY,EAArC;AACA,WAAO;AAAED,MAAAA,MAAF;AAAUH,MAAAA,SAAV;AAAqBK,MAAAA,MAAM,EAAG,QAAOF,MAAO;AAA5C,KAAP;AACD;;AACD,SAAO;AAAEH,IAAAA,SAAF;AAAa,QAAG,MAAMM,6BAA6B,EAAtC;AAAb,GAAP;AACD;;AAEM,eAAeA,6BAAf,GAA+C;AACpD,QAAMC,SAAS,GAAG,CAChB;AACEd,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEG,IAAAA,OAAO,EAAEC,eAAMU,KAAN,CAAY,gCAAZ,CAHX;AAIEC,IAAAA,OAAO,EAAE;AAJX,GADgB,EAOhB;AACEhB,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEG,IAAAA,OAAO,EAAEC,eAAMU,KAAN,CAAY,+BAAZ,CAHX;AAIEC,IAAAA,OAAO,EAAE;AAJX,GAPgB,EAahB;AACEhB,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEG,IAAAA,OAAO,EAAEC,eAAMU,KAAN,CAAY,4BAAZ,CAHX;AAIEC,IAAAA,OAAO,EAAE;AAJX,GAbgB,EAmBhB;AACEhB,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEG,IAAAA,OAAO,EAAEC,eAAMU,KAAN,CAAY,mDAAZ,CAHX;AAIEC,IAAAA,OAAO,EAAE;AAJX,GAnBgB,CAAlB;AA0BA,QAAMC,OAAO,GAAG,MAAMT,kBAASC,MAAT,CAAgBK,SAAhB,CAAtB;AACA,SAAOG,OAAP;AACD;;AAED,SAASN,YAAT,GAAwB;AACtB,QAAMO,QAAQ,GAAG;AACflB,IAAAA,IAAI,EAAE,OADS;AAEfC,IAAAA,IAAI,EAAE,QAFS;AAGfG,IAAAA,OAAO,EAAEC,eAAMc,MAAN,CAAa,2CAAb;AAHM,GAAjB;AAKA,SAAOX,kBAASC,MAAT,CAAgBS,QAAhB,CAAP;AACD","sourcesContent":["import inquirer from 'inquirer';\nimport chalk from 'chalk';\n\nexport async function promptSqlInformation() {\n  const sqlEngineQuestion = [\n    {\n      type: 'list',\n      name: 'sqlEngine',\n      choices: [\n        {\n          name: 'PostgreSQL',\n          value: 'pg',\n        },\n        {\n          name: 'MySQL',\n          value: 'mysql',\n        },\n        {\n          name: 'MySQL2',\n          value: 'mysql2',\n        },\n        {\n          name: 'mariaSQL',\n          value: 'mariasql',\n        },\n        {\n          name: 'MSSQL',\n          value: 'mssql',\n        },\n        {\n          name: 'SQLite3',\n          value: 'sqlite3',\n        },\n        {\n          name: 'Oracle',\n          value: 'oracle',\n        }\n      ],\n      message: chalk.blue('Please select a SQL engine'),\n    }\n  ];\n  const { sqlEngine } = await inquirer.prompt(sqlEngineQuestion);\n  if (sqlEngine === 'sqlite3') {\n    const { dbName } = await promptSqlite();\n    return { dbName, sqlEngine, dbHost: `./db/${dbName}.sqlite` };\n  }\n  return { sqlEngine, ...await promptDBConnectionInformation() };\n}\n\nexport async function promptDBConnectionInformation() {\n  const questions = [\n    {\n      type: 'input',\n      name: 'dbUser',\n      message: chalk.green('What is the database username?'),\n      default: 'root',\n    },\n    {\n      type: 'password',\n      name: 'dbPass',\n      message: chalk.green('What is the database password'),\n      default: 'password',\n    },\n    {\n      type: 'input',\n      name: 'dbName',\n      message: chalk.green('What is the database name?'),\n      default: 'TestDB',\n    },\n    {\n      type: 'input',\n      name: 'dbHost',\n      message: chalk.green('What is the host address of your database server?'),\n      default: '127.0.0.1',\n    }\n  ];\n  const answers = await inquirer.prompt(questions);\n  return answers;\n}\n\nfunction promptSqlite() {\n  const question = {\n    type: 'input',\n    name: 'dbName',\n    message: chalk.orange('What is the name of your SQLite database?'),\n  };\n  return inquirer.prompt(question);\n}\n"],"file":"sqlCommands.js"}