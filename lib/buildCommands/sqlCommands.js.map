{"version":3,"sources":["../../src/buildCommands/sqlCommands.js"],"names":["promptSqlInformation","sqlEngineQuestion","type","name","choices","value","message","chalk","blue","sqlEngine","inquirer","prompt","promptSqlite","promptSqlConectionInformation","questions","default","answers","valQuestion","question"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEO,eAAeA,oBAAf,GAAsC;AAC3C,QAAMC,oBAAoB,CACxB;AACEC,UAAM,MADR;AAEEC,UAAM,WAFR;AAGEC,aAAS,CACP;AACED,YAAM,YADR;AAEEE,aAAO;AAFT,KADO,EAKP;AACEF,YAAM,OADR;AAEEE,aAAO;AAFT,KALO,EASP;AACEF,YAAM,QADR;AAEEE,aAAO;AAFT,KATO,EAaP;AACEF,YAAM,UADR;AAEEE,aAAO;AAFT,KAbO,EAiBP;AACEF,YAAM,OADR;AAEEE,aAAO;AAFT,KAjBO,EAqBP;AACEF,YAAM,SADR;AAEEE,aAAO;AAFT,KArBO,EAyBP;AACEF,YAAM,QADR;AAEEE,aAAO;AAFT,KAzBO,CAHX;AAiCEC,aAASC,eAAMC,IAAN,CAAW,4BAAX;AAjCX,GADwB,CAA1B;AAqCA,QAAM;AAAEC;AAAF,MAAiB,MAAMC,kBAASC,MAAT,CAAgBV,iBAAhB,CAA7B;AACA,MAAIQ,cAAc,SAAlB,EAA6B,OAAO,EAAE,IAAG,MAAMG,cAAT,CAAF;AAA2BH;AAA3B,GAAP;AAC7B,SAAOI,8BAA8BJ,SAA9B,CAAP,CAxC2C,CAyC3C;AACD,C,CAED;AACA;AACA;;;AAEA,eAAeI,6BAAf,CAA6CJ,SAA7C,EAAwD;AACtD,QAAMK,YAAY,CAChB;AACEZ,UAAM,OADR;AAEEC,UAAM,SAFR;AAGEG,aAASC,eAAMC,IAAN,CAAW,2BAAX,CAHX;AAIEO,aAAS;AAJX,GADgB,EAOhB;AACEb,UAAM,UADR;AAEEC,UAAM,UAFR;AAGEG,aAASC,eAAMC,IAAN,CAAW,mBAAX,CAHX;AAIEO,aAAS;AAJX,GAPgB,EAahB;AACEb,UAAM,OADR;AAEEC,UAAM,cAFR;AAGEG,aAASC,eAAMC,IAAN,CAAW,4BAAX,CAHX;AAIEO,aAAS;AAJX,GAbgB,EAmBhB;AACEb,UAAM,OADR;AAEEC,UAAM,MAFR;AAGEG,aAASC,eAAMC,IAAN,CAAW,8CAAX,CAHX;AAIEO,aAAS;AAJX,GAnBgB,CAAlB;AA0BA,QAAMC,UAAU,MAAMN,kBAASC,MAAT,CAAgBG,SAAhB,CAAtB;;AACA,MAAIL,cAAc,IAAlB,EAAwB;AACtB,UAAMQ,cAAc;AAClBf,YAAM,OADY;AAElBC,YAAM,SAFY;AAGlBG,eAASC,eAAMC,IAAN,CAAW,2BAAX;AAHS,KAApB;AAKA,WAAO,EAAE,GAAGQ,OAAL;AAAc,UAAG,MAAMN,kBAASC,MAAT,CAAgBM,WAAhB,CAAT;AAAd,KAAP;AACD;;AACD,SAAOD,OAAP;AACD;;AAED,SAASJ,YAAT,GAAwB;AACtB,QAAMM,WAAW;AACfhB,UAAM,OADS;AAEfC,UAAM,UAFS;AAGfG,aAAS;AAHM,GAAjB;AAKA,SAAOI,kBAASC,MAAT,CAAgBO,QAAhB,CAAP;AACD","sourcesContent":["import inquirer from 'inquirer';\nimport chalk from 'chalk';\n\nexport async function promptSqlInformation() {\n  const sqlEngineQuestion = [\n    {\n      type: 'list',\n      name: 'sqlEngine',\n      choices: [\n        {\n          name: 'PostgreSQL',\n          value: 'pg',\n        },\n        {\n          name: 'MySQL',\n          value: 'mysql',\n        },\n        {\n          name: 'MySQL2',\n          value: 'mysql2',\n        },\n        {\n          name: 'mariaSQL',\n          value: 'mariasql',\n        },\n        {\n          name: 'MSSQL',\n          value: 'mssql',\n        },\n        {\n          name: 'SQLite3',\n          value: 'sqlite3',\n        },\n        {\n          name: 'Oracle',\n          value: 'oracle',\n        },\n      ],\n      message: chalk.blue('Please select a SQL engine'),\n    }\n  ];\n  const { sqlEngine, } = await inquirer.prompt(sqlEngineQuestion);\n  if (sqlEngine === 'sqlite3') return { ...await promptSqlite(), sqlEngine, };\n  return promptSqlConectionInformation(sqlEngine);\n  // Edit env file\n}\n\n// TODO: Figure out best way to edit dotEnv files(fs or dotEnv module?...)\n// function editSqlEnvs(data) {\n// }\n\nasync function promptSqlConectionInformation(sqlEngine) {\n  const questions = [\n    {\n      type: 'input',\n      name: 'sqlUser',\n      message: chalk.blue('What is the SQL username?'),\n      default: 'root',\n    },\n    {\n      type: 'password',\n      name: 'password',\n      message: chalk.blue('SQL User password'),\n      default: 'password',\n    },\n    {\n      type: 'input',\n      name: 'databaseName',\n      message: chalk.blue('What is the database name?'),\n      default: '',\n    },\n    {\n      type: 'input',\n      name: 'host',\n      message: chalk.blue('What is the host address of your sql server?'),\n      default: '127.0.0.1',\n    }\n  ];\n  const answers = await inquirer.prompt(questions);\n  if (sqlEngine === 'pg') {\n    const valQuestion = {\n      type: 'input',\n      name: 'version',\n      message: chalk.blue('What version of Postgres?'),\n    };\n    return { ...answers, ...await inquirer.prompt(valQuestion), };\n  }\n  return answers;\n}\n\nfunction promptSqlite() {\n  const question = {\n    type: 'input',\n    name: 'filepath',\n    message: 'What is the filepath to your sqlite database?',\n  };\n  return inquirer.prompt(question);\n}\n"],"file":"sqlCommands.js"}