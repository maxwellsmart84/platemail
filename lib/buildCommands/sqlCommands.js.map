{"version":3,"sources":["../../src/buildCommands/sqlCommands.js"],"names":["promptSqlInformation","sqlEngineQuestion","type","name","choices","value","message","chalk","blue","sqlEngine","inquirer","prompt","dbName","promptSqlite","dbHost","promptSqlConectionInformation","questions","green","default","answers","question","orange"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEO,eAAeA,oBAAf,GAAsC;AAC3C,QAAMC,oBAAoB,CACxB;AACEC,UAAM,MADR;AAEEC,UAAM,WAFR;AAGEC,aAAS,CACP;AACED,YAAM,YADR;AAEEE,aAAO;AAFT,KADO,EAKP;AACEF,YAAM,OADR;AAEEE,aAAO;AAFT,KALO,EASP;AACEF,YAAM,QADR;AAEEE,aAAO;AAFT,KATO,EAaP;AACEF,YAAM,UADR;AAEEE,aAAO;AAFT,KAbO,EAiBP;AACEF,YAAM,OADR;AAEEE,aAAO;AAFT,KAjBO,EAqBP;AACEF,YAAM,SADR;AAEEE,aAAO;AAFT,KArBO,EAyBP;AACEF,YAAM,QADR;AAEEE,aAAO;AAFT,KAzBO,CAHX;AAiCEC,aAASC,eAAMC,IAAN,CAAW,4BAAX;AAjCX,GADwB,CAA1B;AAqCA,QAAM;AAAEC;AAAF,MAAgB,MAAMC,kBAASC,MAAT,CAAgBV,iBAAhB,CAA5B;;AACA,MAAIQ,cAAc,SAAlB,EAA6B;AAC3B,UAAM;AAAEG;AAAF,QAAa,MAAMC,cAAzB;AACA,WAAO;AAAED,YAAF;AAAUH,eAAV;AAAqBK,cAAS,QAAOF,MAAO;AAA5C,KAAP;AACD;;AACD,SAAO;AAAEH,aAAF;AAAa,QAAG,MAAMM,+BAAT;AAAb,GAAP;AACD,C,CAED;AACA;AACA;;;AAEA,eAAeA,6BAAf,GAA+C;AAC7C,QAAMC,YAAY,CAChB;AACEd,UAAM,OADR;AAEEC,UAAM,QAFR;AAGEG,aAASC,eAAMU,KAAN,CAAY,2BAAZ,CAHX;AAIEC,aAAS;AAJX,GADgB,EAOhB;AACEhB,UAAM,UADR;AAEEC,UAAM,QAFR;AAGEG,aAASC,eAAMU,KAAN,CAAY,mBAAZ,CAHX;AAIEC,aAAS;AAJX,GAPgB,EAahB;AACEhB,UAAM,OADR;AAEEC,UAAM,QAFR;AAGEG,aAASC,eAAMU,KAAN,CAAY,4BAAZ,CAHX;AAIEC,aAAS;AAJX,GAbgB,EAmBhB;AACEhB,UAAM,OADR;AAEEC,UAAM,QAFR;AAGEG,aAASC,eAAMU,KAAN,CAAY,8CAAZ,CAHX;AAIEC,aAAS;AAJX,GAnBgB,CAAlB;AA0BA,QAAMC,UAAU,MAAMT,kBAASC,MAAT,CAAgBK,SAAhB,CAAtB;AACA,SAAOG,OAAP;AACD;;AAED,SAASN,YAAT,GAAwB;AACtB,QAAMO,WAAW;AACflB,UAAM,OADS;AAEfC,UAAM,QAFS;AAGfG,aAASC,eAAMc,MAAN,CAAa,2CAAb;AAHM,GAAjB;AAKA,SAAOX,kBAASC,MAAT,CAAgBS,QAAhB,CAAP;AACD","sourcesContent":["import inquirer from 'inquirer';\nimport chalk from 'chalk';\n\nexport async function promptSqlInformation() {\n  const sqlEngineQuestion = [\n    {\n      type: 'list',\n      name: 'sqlEngine',\n      choices: [\n        {\n          name: 'PostgreSQL',\n          value: 'pg',\n        },\n        {\n          name: 'MySQL',\n          value: 'mysql',\n        },\n        {\n          name: 'MySQL2',\n          value: 'mysql2',\n        },\n        {\n          name: 'mariaSQL',\n          value: 'mariasql',\n        },\n        {\n          name: 'MSSQL',\n          value: 'mssql',\n        },\n        {\n          name: 'SQLite3',\n          value: 'sqlite3',\n        },\n        {\n          name: 'Oracle',\n          value: 'oracle',\n        }\n      ],\n      message: chalk.blue('Please select a SQL engine'),\n    }\n  ];\n  const { sqlEngine } = await inquirer.prompt(sqlEngineQuestion);\n  if (sqlEngine === 'sqlite3') {\n    const { dbName } = await promptSqlite();\n    return { dbName, sqlEngine, dbHost: `./db/${dbName}.sqlite` };\n  }\n  return { sqlEngine, ...await promptSqlConectionInformation() };\n}\n\n// TODO: Figure out best way to edit dotEnv files(fs or dotEnv module?...)\n// function editSqlEnvs(data) {\n// }\n\nasync function promptSqlConectionInformation() {\n  const questions = [\n    {\n      type: 'input',\n      name: 'dbUser',\n      message: chalk.green('What is the SQL username?'),\n      default: 'root',\n    },\n    {\n      type: 'password',\n      name: 'dbPass',\n      message: chalk.green('SQL User password'),\n      default: 'password',\n    },\n    {\n      type: 'input',\n      name: 'dbName',\n      message: chalk.green('What is the database name?'),\n      default: 'TestDB',\n    },\n    {\n      type: 'input',\n      name: 'dbHost',\n      message: chalk.green('What is the host address of your sql server?'),\n      default: '127.0.0.1',\n    }\n  ];\n  const answers = await inquirer.prompt(questions);\n  return answers;\n}\n\nfunction promptSqlite() {\n  const question = {\n    type: 'input',\n    name: 'dbName',\n    message: chalk.orange('What is the name of your sqlite database?'),\n  };\n  return inquirer.prompt(question);\n}\n"],"file":"sqlCommands.js"}